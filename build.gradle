plugins {
    id 'java-library'
    id "io.qameta.allure" version "2.9.6"
}

repositories {
    mavenCentral()
}

def  allureVersion = '2.19.0',
     selenideVersion = '6.8.1',
     appiumVersion = '8.2.0',
     restAssuredVersion = '5.2.0',
     commonsIoVersion = "2.11.0",
     junitVersion = '5.9.0',
     slf4jVersion = '2.0.3',
     assertJVersion = "3.23.1",
     gsonVersion = "2.9.0"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.appium:java-client:$appiumVersion",
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "commons-io:commons-io:$commonsIoVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "org.assertj:assertj-core:$assertJVersion",
            "com.google.code.gson:gson:$gsonVersion"
    )
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task android(type: Test) {
    useJUnitPlatform {
        includeTags 'android'
    }
}